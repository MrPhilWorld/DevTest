{"ast":null,"code":"var _jsxFileName = \"/Users/phillafrance/Turbulent/Projects/exercise/src/StringDisplay.js\";\nimport React, { Component } from \"react\";\nimport debounce from \"lodash.debounce\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst regex = /([\\S\\s]){1,80}\\b/g;\n\nclass StringDisplay extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onDragOver = e => {\n      e.preventDefault();\n    };\n\n    this.onDragStart = (e, id) => {\n      e.dataTransfer.setData(\"id\", id);\n    };\n\n    this.onDrop = (e, id) => {\n      var draggedLineIndex = e.dataTransfer.getData(\"id\");\n      this.setState({\n        lines: this.reorderLines(id, draggedId),\n        saved: false\n      });\n      this.updateDatabase();\n    };\n\n    this.updateDatabase = debounce(() => {\n      fetch(\"https://jsonplaceholder.typicode.com/posts\", {\n        method: \"POST\",\n        body: JSON.stringify({\n          body: this.state.lines\n        }),\n        headers: {\n          \"Content-type\": \"application/json; charset=UTF-8\"\n        }\n      }).then(response => response.json()).then(json => console.log(json));\n      this.setState({\n        saved: true\n      });\n    }, 2000);\n    this.state = {\n      lines: this.props.length.match(regex),\n      saved: true\n    };\n  }\n\n  reorderLines(id, draggedId) {\n    var tempLines = this.state.lines;\n    var draggedLine = tempLines[draggedId];\n    tempLines[draggedId] = tempLines[id];\n    tempLines[id] = draggedLine;\n    return tempLines;\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: this.state.saved ? \"saved\" : \"saving\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: this.state.saved ? \"Saved\" : \"Saving\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), this.state.lines.map((line, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n        draggable: true,\n        onDragOver: e => this.onDragOver(e),\n        onDragStart: e => this.onDragStart(e, i),\n        onDrop: e => this.onDrop(e, i),\n        children: line\n      }, line, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default StringDisplay;","map":{"version":3,"sources":["/Users/phillafrance/Turbulent/Projects/exercise/src/StringDisplay.js"],"names":["React","Component","debounce","regex","StringDisplay","constructor","props","onDragOver","e","preventDefault","onDragStart","id","dataTransfer","setData","onDrop","draggedLineIndex","getData","setState","lines","reorderLines","draggedId","saved","updateDatabase","fetch","method","body","JSON","stringify","state","headers","then","response","json","console","log","length","match","tempLines","draggedLine","render","map","line","i"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport debounce from \"lodash.debounce\";\n\nconst regex = /([\\S\\s]){1,80}\\b/g;\n\nclass StringDisplay extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      lines: this.props.length.match(regex),\n      saved: true,\n    };\n  }\n\n  onDragOver = (e) => {\n    e.preventDefault();\n  };\n\n  onDragStart = (e, id) => {\n    e.dataTransfer.setData(\"id\", id);\n  };\n\n  onDrop = (e, id) => {\n    var draggedLineIndex = e.dataTransfer.getData(\"id\");\n\n    this.setState({\n      lines: this.reorderLines(id, draggedId),\n      saved: false,\n    });\n\n    this.updateDatabase();\n  };\n\n  updateDatabase = debounce(() => {\n    fetch(\"https://jsonplaceholder.typicode.com/posts\", {\n      method: \"POST\",\n      body: JSON.stringify({\n        body: this.state.lines,\n      }),\n      headers: {\n        \"Content-type\": \"application/json; charset=UTF-8\",\n      },\n    })\n      .then((response) => response.json())\n      .then((json) => console.log(json));\n\n    this.setState({\n      saved: true,\n    });\n  }, 2000);\n\n  reorderLines(id, draggedId) {\n    var tempLines = this.state.lines;\n    var draggedLine = tempLines[draggedId];\n    tempLines[draggedId] = tempLines[id];\n    tempLines[id] = draggedLine;\n\n    return tempLines;\n  }\n\n  render() {\n    return (\n      <div>\n        <div className={this.state.saved ? \"saved\" : \"saving\"}>\n          <p>{this.state.saved ? \"Saved\" : \"Saving\"}</p>\n        </div>\n        {this.state.lines.map((line, i) => (\n          <div\n            key={line}\n            draggable\n            onDragOver={(e) => this.onDragOver(e)}\n            onDragStart={(e) => this.onDragStart(e, i)}\n            onDrop={(e) => this.onDrop(e, i)}\n          >\n            {line}\n          </div>\n        ))}\n      </div>\n    );\n  }\n}\n\nexport default StringDisplay;\n"]},"metadata":{},"sourceType":"module"}