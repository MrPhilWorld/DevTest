{"ast":null,"code":"var _jsxFileName = \"/Users/phillafrance/Turbulent/Projects/exercise/src/StringDisplay.js\";\nimport React, { Component } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst regex = /([\\S\\s]){1,80}\\b/g;\nconst liness = {};\n\nclass StringSplitter extends Component {\n  constructor() {\n    liness = this.props.length.match(regex);\n    console.log(liness);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: this.state.lines.map((line, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n        draggable: true,\n        onDragOver: e => this.onDragOver(e),\n        onDragStart: e => this.onDragStart(e, i),\n        onDrop: e => this.onDrop(e, i),\n        children: [line, \" \", line.length, \" \", i]\n      }, line, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default StringSplitter;","map":{"version":3,"sources":["/Users/phillafrance/Turbulent/Projects/exercise/src/StringDisplay.js"],"names":["React","Component","regex","liness","StringSplitter","constructor","props","length","match","console","log","render","state","lines","map","line","i","e","onDragOver","onDragStart","onDrop"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;AAEA,MAAMC,KAAK,GAAG,mBAAd;AAEA,MAAMC,MAAM,GAAG,EAAf;;AAEA,MAAMC,cAAN,SAA6BH,SAA7B,CAAuC;AACrCI,EAAAA,WAAW,GAAG;AACZF,IAAAA,MAAM,GAAG,KAAKG,KAAL,CAAWC,MAAX,CAAkBC,KAAlB,CAAwBN,KAAxB,CAAT;AACAO,IAAAA,OAAO,CAACC,GAAR,CAAYP,MAAZ;AACD;;AAuBDQ,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA,gBACG,KAAKC,KAAL,CAAWC,KAAX,CAAiBC,GAAjB,CAAqB,CAACC,IAAD,EAAOC,CAAP,kBACpB;AAEE,QAAA,SAAS,MAFX;AAGE,QAAA,UAAU,EAAGC,CAAD,IAAO,KAAKC,UAAL,CAAgBD,CAAhB,CAHrB;AAIE,QAAA,WAAW,EAAGA,CAAD,IAAO,KAAKE,WAAL,CAAiBF,CAAjB,EAAoBD,CAApB,CAJtB;AAKE,QAAA,MAAM,EAAGC,CAAD,IAAO,KAAKG,MAAL,CAAYH,CAAZ,EAAeD,CAAf,CALjB;AAAA,mBAOGD,IAPH,OAOUA,IAAI,CAACR,MAPf,OAOwBS,CAPxB;AAAA,SACOD,IADP;AAAA;AAAA;AAAA;AAAA,cADD;AADH;AAAA;AAAA;AAAA;AAAA,YADF;AAeD;;AA3CoC;;AA8CvC,eAAeX,cAAf","sourcesContent":["import React, { Component } from \"react\";\n\nconst regex = /([\\S\\s]){1,80}\\b/g;\n\nconst liness = {};\n\nclass StringSplitter extends Component {\n  constructor() {\n    liness = this.props.length.match(regex);\n    console.log(liness);\n  }\n  state = {\n    lines: this.props.length.match(regex),\n  };\n\n  onDragOver = (e) => {\n    e.preventDefault();\n  };\n\n  onDragStart = (e, id) => {\n    console.log(\"drag started for: \" + id);\n    e.dataTransfer.setData(\"id\", id);\n  };\n\n  onDrop = (e, id) => {\n    let oldId = e.dataTransfer.getData(\"id\");\n    console.log(\"dropped \" + oldId + \" on \" + id);\n    var a = this.state.lines[oldId];\n    this.state.lines[oldId] = this.state.lines[id];\n    this.state.lines[id] = a;\n    console.log(this.state.lines);\n  };\n\n  render() {\n    return (\n      <div>\n        {this.state.lines.map((line, i) => (\n          <div\n            key={line}\n            draggable\n            onDragOver={(e) => this.onDragOver(e)}\n            onDragStart={(e) => this.onDragStart(e, i)}\n            onDrop={(e) => this.onDrop(e, i)}\n          >\n            {line} {line.length} {i}\n          </div>\n        ))}\n      </div>\n    );\n  }\n}\n\nexport default StringSplitter;\n"]},"metadata":{},"sourceType":"module"}