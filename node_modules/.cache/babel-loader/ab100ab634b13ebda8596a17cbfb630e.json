{"ast":null,"code":"var _jsxFileName = \"/Users/phillafrance/Turbulent/Projects/exercise/src/StringDisplay.js\";\nimport React, { Component } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst regex = /{1,80}\\b/g;\nexport default class StringSplitter extends Component {\n  constructor() {\n    super(...arguments);\n\n    this.onDragOver = ev => {\n      ev.preventDefault();\n    };\n  }\n\n  render() {\n    const lines = this.props.length.match(regex);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: lines.map((line, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n        draggable: true,\n        onDragOver: e => this.onDragOver(e),\n        children: [line, \" \", line.length, \" \", i]\n      }, i, true, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/phillafrance/Turbulent/Projects/exercise/src/StringDisplay.js"],"names":["React","Component","regex","StringSplitter","onDragOver","ev","preventDefault","render","lines","props","length","match","map","line","i","e"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;AAEA,MAAMC,KAAK,GAAG,WAAd;AAEA,eAAe,MAAMC,cAAN,SAA6BF,SAA7B,CAAuC;AAAA;AAAA;;AAAA,SACpDG,UADoD,GACtCC,EAAD,IAAQ;AACnBA,MAAAA,EAAE,CAACC,cAAH;AACD,KAHmD;AAAA;;AAKpDC,EAAAA,MAAM,GAAG;AACP,UAAMC,KAAK,GAAG,KAAKC,KAAL,CAAWC,MAAX,CAAkBC,KAAlB,CAAwBT,KAAxB,CAAd;AAEA,wBACE;AAAA,gBACGM,KAAK,CAACI,GAAN,CAAU,CAACC,IAAD,EAAOC,CAAP,kBACT;AAAa,QAAA,SAAS,MAAtB;AAAuB,QAAA,UAAU,EAAGC,CAAD,IAAO,KAAKX,UAAL,CAAgBW,CAAhB,CAA1C;AAAA,mBACGF,IADH,OACUA,IAAI,CAACH,MADf,OACwBI,CADxB;AAAA,SAAUA,CAAV;AAAA;AAAA;AAAA;AAAA,cADD;AADH;AAAA;AAAA;AAAA;AAAA,YADF;AASD;;AAjBmD","sourcesContent":["import React, { Component } from \"react\";\n\nconst regex = /{1,80}\\b/g;\n\nexport default class StringSplitter extends Component {\n  onDragOver = (ev) => {\n    ev.preventDefault();\n  };\n\n  render() {\n    const lines = this.props.length.match(regex);\n\n    return (\n      <div>\n        {lines.map((line, i) => (\n          <div key={i} draggable onDragOver={(e) => this.onDragOver(e)}>\n            {line} {line.length} {i}\n          </div>\n        ))}\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}