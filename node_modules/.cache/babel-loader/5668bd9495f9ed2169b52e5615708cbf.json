{"ast":null,"code":"var _jsxFileName = \"/Users/phillafrance/Turbulent/Projects/exercise/src/StringDisplay.js\";\nimport React, { Component } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst regex = /([\\S\\s]){1,80}\\b/g;\n\nclass StringSplitter extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onDragOver = e => {\n      e.preventDefault();\n    };\n\n    this.onDragStart = (e, id) => {\n      console.log(\"drag started for: \" + id);\n      e.dataTransfer.setData(\"id\", id);\n    };\n\n    this.onDrop = (e, id) => {\n      var oldId = e.dataTransfer.getData(\"id\");\n      console.log(\"dropped \" + oldId + \" on \" + id);\n      this.setState({\n        lines: this.reorderLines(id, oldId)\n      });\n      this.updateDB();\n    };\n\n    this.state = {\n      lines: this.props.length.match(regex)\n    };\n  }\n\n  reorderLines(id, oldId) {\n    var tempLines = this.state.lines;\n    var a = tempLines[oldId];\n    tempLines[oldId] = tempLines[id];\n    tempLines[id] = a;\n    console.log(tempLines);\n    fetch(\"https://mywebsite.com/endpoint/\", {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        firstParam: \"yourValue\",\n        secondParam: \"yourOtherValue\"\n      })\n    });\n    return tempLines;\n  }\n\n  updateDB() {\n    fetch(\"https://jsonplaceholder.typicode.com/posts\", {\n      method: \"POST\",\n      body: JSON.stringify({\n        data: this.state.lines\n      }),\n      headers: {\n        \"Content-type\": \"application/json; charset=UTF-8\"\n      }\n    }).then(response => response.json()).then(json => console.log(json));\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: this.state.lines.map((line, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n        draggable: true,\n        onDragOver: e => this.onDragOver(e),\n        onDragStart: e => this.onDragStart(e, i),\n        onDrop: e => this.onDrop(e, i),\n        children: [line, \" \", line.length, \" \", i]\n      }, line, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default StringSplitter;","map":{"version":3,"sources":["/Users/phillafrance/Turbulent/Projects/exercise/src/StringDisplay.js"],"names":["React","Component","regex","StringSplitter","constructor","props","onDragOver","e","preventDefault","onDragStart","id","console","log","dataTransfer","setData","onDrop","oldId","getData","setState","lines","reorderLines","updateDB","state","length","match","tempLines","a","fetch","method","headers","Accept","body","JSON","stringify","firstParam","secondParam","data","then","response","json","render","map","line","i"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\n\nconst regex = /([\\S\\s]){1,80}\\b/g;\n\nclass StringSplitter extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      lines: this.props.length.match(regex),\n    };\n  }\n\n  onDragOver = (e) => {\n    e.preventDefault();\n  };\n\n  onDragStart = (e, id) => {\n    console.log(\"drag started for: \" + id);\n    e.dataTransfer.setData(\"id\", id);\n  };\n\n  onDrop = (e, id) => {\n    var oldId = e.dataTransfer.getData(\"id\");\n    console.log(\"dropped \" + oldId + \" on \" + id);\n\n    this.setState({\n      lines: this.reorderLines(id, oldId),\n    });\n\n    this.updateDB();\n  };\n\n  reorderLines(id, oldId) {\n    var tempLines = this.state.lines;\n    var a = tempLines[oldId];\n    tempLines[oldId] = tempLines[id];\n    tempLines[id] = a;\n\n    console.log(tempLines);\n\n    fetch(\"https://mywebsite.com/endpoint/\", {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        firstParam: \"yourValue\",\n        secondParam: \"yourOtherValue\",\n      }),\n    });\n\n    return tempLines;\n  }\n\n  updateDB() {\n    fetch(\"https://jsonplaceholder.typicode.com/posts\", {\n      method: \"POST\",\n      body: JSON.stringify({\n        data: this.state.lines,\n      }),\n      headers: {\n        \"Content-type\": \"application/json; charset=UTF-8\",\n      },\n    })\n      .then((response) => response.json())\n      .then((json) => console.log(json));\n  }\n\n  render() {\n    return (\n      <div>\n        {this.state.lines.map((line, i) => (\n          <div\n            key={line}\n            draggable\n            onDragOver={(e) => this.onDragOver(e)}\n            onDragStart={(e) => this.onDragStart(e, i)}\n            onDrop={(e) => this.onDrop(e, i)}\n          >\n            {line} {line.length} {i}\n          </div>\n        ))}\n      </div>\n    );\n  }\n}\n\nexport default StringSplitter;\n"]},"metadata":{},"sourceType":"module"}